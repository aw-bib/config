# set vi mode
setw -g mode-key vi
# disable delays for usage of the arrow keys
set-option -g repeat-time 0
set-window-option -g mode-keys vi
# bind r to reloading the config file
bind r source-file ~/.tmux.conf \; display "Reloaded tmux config file."

# use sensible terminal
set -g default-terminal "xterm-256color"
# if we use a solarized palette for the terminal emulator use 16
# colours as those actually match already solarized colours
# set -g default-terminal "xterm"

# enable wm window titles
set-window-option -g automatic-rename on
set -g set-titles on

# Window activity monitor
setw -g monitor-activity on
set -g visual-activity on

# Start numbering with 1 ie like XFWM
set -g base-index 1
# setw -g pane-base-index 1

# # wm window title string (uses statusbar variables)
set -g set-titles-string "#H: [#S] #I,#P (#W)"

# Shift arrow to switch windows
# normal mode => no prefix
bind -n S-Left previous-window
bind -n S-Right next-window

# Theming for ancient tmux similar to solarize

# default statusbar colors
set-option -g status-bg white #base2
set-option -g status-fg yellow #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg yellow #base00
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg red #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg white #base2
set-option -g pane-active-border-bg blue #base1
set-option -g pane-active-border-fg white #base1

# message text
set-option -g message-bg white #base2
set-option -g message-fg red #orange

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour red #orange

# clock
set-window-option -g clock-mode-colour green #green

# bell
### set-window-option -g window-status-bell-style fg=white,bg=red #base2, red


bind-key / command-prompt  "split-window 'exec man %%'"
bind-key S command-prompt  "new-window -n %1 'ssh %1'"
# Invenio dev for join2
# - start bash within the container
bind-key I split-window 'docker exec -it docker_join2-all_1 bash'
# - start bibsched within the container
bind-key B split-window 'docker exec -it docker_join2-all_1 sudo -u www-data /opt/invenio/bin/bibsched'

set-option -g mouse on
# Mouse keys are:
# MouseDown1 : left key click
# MouseDown2 : middle key click
# MouseDown3 : right key click
# set-option mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

## # Mouse mode requires quite new tmux. This is prior 2.1
# set -g mouse-mode on
# set -g mouse-resize-pane on
# set -g mouse-select-pane on
#
# # This would disables mouse copy & paste!
# set -g mouse-select-window on
# For < v2.3
# bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' copy-selection

unbind-key p
bind p paste-buffer

unbind-key -T copy-mode-vi Space
bind-key -T copy-mode-vi v send-keys -X begin-selection

# Use primary selection for copy&paste with the mouse and keyboard
# This mimics traditional xterm behaviour and vi "*p
# Use -selection clipboard for vi "+p
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection primary'\; display-message "Copied to primary selection"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -in -selection primary' \; display-message "Copied to primary selection"
bind-key -T root MouseDown2Pane run -b "xclip -o -sel primary | tmux load-buffer - && tmux paste-buffer -s ' '"; display-message "Pasted from primary selection"

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# Resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# needs tmux v 1.8
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

set -g status-left-length 32
set -g status-right-length 150

set -g status-fg white
set -g status-bg colour234
# set -g window-status-activity-attr bold
## set -g pane-border-fg colour245
## set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold


#colour0 (black)
#colour1 (red)
#colour2 (green)
#colour3 (yellow)
#colour4 (blue)
#colour7 (white)
#colour5 colour6 colour7 colour8 colour9 colour10 colour11 colour12 colour13 colour14 colour15 colour16 colour17

#D ()
#F ()
#H (hostname)
#I (window index)
#P ()
#S (session index)
#T (pane title)
#W (currnet task like vim if editing a file in vim or zsh if running zsh)

#Set the left and right status
set -g status-left '#[bg=colour7]#[fg=colour0]#{?client_prefix,#[bg=colour2],} 贈 #S #[bg=colour8]#[fg=colour7]#{?client_prefix,#[fg=colour2],}#[bg=colour1]#[bg=colour1]#[fg=colour0] ♥ #(cut -d " " -f 1-3 /proc/loadavg)#[bg=colour8]#[fg=colour1]'
set -g status-right '#[bg=color0]#[fg=colour1]#[bg=colour1] #[fg=colour0] #H #[fg=colour1]#[fg=colour3]#[bg=colour3]#[fg=colour0] %a, %d %b, %R #[bg=colour3]#[fg=colour7]#[bg=colour7]#[fg=colour0] #(whoami) '

# Set the background color
set -g status-bg colour8

# customize how windows are displayed in the status line
set -g window-status-current-format "#[fg=colour7]#[bg=colour3] #I* #[bg=colour4]#[fg=colour7] #W "
set -g window-status-format "#[fg=colour244]#[bg=colour8] #I #[fg=colour240] #W "

# Set the history limit so we get lots of scrollback.
#setw -g history-limit 50000

# only old tmux?
# set -g status-utf8 on

set -g status-interval 60
setw -g monitor-activity on
set -g visual-activity on

setw -g window-status-attr dim
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright
# set -g status-justify left
set -g status-justify centre
